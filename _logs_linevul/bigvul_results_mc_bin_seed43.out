[2023-11-14 15:42:56,598] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
Namespace(data_file='/hpcfs/users/a1232991/Data/CVESingle/CVEALL.csv', output_dir='./saved_models/ourBin/seed43', model_type='roberta', block_size=512, model_name='model.bin', model_name_or_path='microsoft/codebert-base', config_name='', use_non_pretrained_model=False, tokenizer_name='microsoft/codebert-base', code_length=256, post_adjust=False, do_train=True, do_eval=False, do_test=True, debug=False, evaluate_during_training=True, do_local_explanation=False, reasoning_method=None, train_batch_size=16, eval_batch_size=16, gradient_accumulation_steps=1, learning_rate=2e-05, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, max_steps=-1, warmup_steps=0, seed=43, epochs=10, language='Python,TypeScript,Java,CS,CCPP,JavaScript', resume=None, effort_at_top_k=0.2, top_k_recall_by_lines=0.01, top_k_recall_by_pred_prob=0.2, do_sorting_by_line_scores=False, do_sorting_by_pred_prob=False, logits_adjust=False, top_k_constant=10, num_attention_heads=12, write_raw_preds=False, use_word_level_tokenizer=False, use_non_pretrained_tokenizer=False, n_gpu=1, device=device(type='cuda'))
best_threshold for Python:  0.9933
best_f1 for Python:  0.9064
best_recall:  0.8288
best_precision:  1.0
***** Python Test results *****
{'Python_accuracy': 0.9856459330143541, 'Python_ap': 0.8890155266875163, 'Python_recall': array([0.99778107, 0.83783784]), 'Python_precision': array([0.98683248, 0.96875   ]), 'Python_f1': array([0.99227657, 0.89855072]), 'Python_threshold': 0.9933, 'Python_mcc': 0.8935898295614552, 'Python_cm': array([[1349,    3],
       [  18,   93]])}
best_threshold for TypeScript:  0.0084
best_f1 for TypeScript:  0.1795
best_recall:  0.6364
best_precision:  0.1045
***** TypeScript Test results *****
{'TypeScript_accuracy': 0.9067796610169492, 'TypeScript_ap': 0.08890942834966661, 'TypeScript_recall': array([0.94666667, 0.09090909]), 'TypeScript_precision': array([0.95515695, 0.07692308]), 'TypeScript_f1': array([0.95089286, 0.08333333]), 'TypeScript_threshold': 0.0084, 'TypeScript_mcc': 0.034719322285443416, 'TypeScript_cm': array([[213,  12],
       [ 10,   1]])}
best_threshold for Java:  0.0325
best_f1 for Java:  0.3677
best_recall:  0.41
best_precision:  0.3333
***** Java Test results *****
{'Java_accuracy': 0.9203354297693921, 'Java_ap': 0.353669831037608, 'Java_recall': array([0.97145004, 0.24      ]), 'Java_precision': array([0.94448503, 0.38709677]), 'Java_f1': array([0.95777778, 0.2962963 ]), 'Java_threshold': 0.0325, 'Java_mcc': 0.26478856473664936, 'Java_cm': array([[1293,   38],
       [  76,   24]])}
best_threshold for CS:  0.0414
best_f1 for CS:  0.789
best_recall:  0.7167
best_precision:  0.8776
***** CS Test results *****
{'CS_accuracy': 0.8991228070175439, 'CS_ap': 0.8502401534513242, 'CS_recall': array([0.98214286, 0.66666667]), 'CS_precision': array([0.89189189, 0.93023256]), 'CS_f1': array([0.93484419, 0.77669903]), 'CS_threshold': 0.0414, 'CS_mcc': 0.7303438730742229, 'CS_cm': array([[165,   3],
       [ 20,  40]])}
best_threshold for CCPP:  0.0314
best_f1 for CCPP:  0.2885
best_recall:  0.3391
best_precision:  0.251
***** CCPP Test results *****
{'CCPP_accuracy': 0.9429835980213486, 'CCPP_ap': 0.2824184351435466, 'CCPP_recall': array([0.98036264, 0.21361816]), 'CCPP_precision': array([0.96051485, 0.35794183]), 'CCPP_f1': array([0.97033726, 0.26755853]), 'CCPP_threshold': 0.0314, 'CCPP_mcc': 0.24854472789306015, 'CCPP_cm': array([[14328,   287],
       [  589,   160]])}
best_threshold for JavaScript:  0.5012
best_f1 for JavaScript:  0.5116
best_recall:  0.477
best_precision:  0.5517
***** JavaScript Test results *****
{'JavaScript_accuracy': 0.913335052875935, 'JavaScript_ap': 0.5331238040650017, 'JavaScript_recall': array([0.95923603, 0.47696477]), 'JavaScript_precision': array([0.94575604, 0.55172414]), 'JavaScript_f1': array([0.95244834, 0.51162791]), 'JavaScript_threshold': 0.5012, 'JavaScript_mcc': 0.4658339334653419, 'JavaScript_cm': array([[3365,  143],
       [ 193,  176]])}
best_threshol:  0.5012
best_f1 for:  0.4151
best_recall:  0.3529
best_precision:  0.5041
***** Test results *****
  %s = %s test_accuracy 0.9384
  %s = %s test_ap 0.4474
  %s = %s test_cm [[20713   486]
 [  906   494]]
  %s = %s test_f1 0.4151
  %s = %s test_mcc 0.3905
  %s = %s test_precision 0.5041
  %s = %s test_recall 0.3529
  %s = %s test_threshold 0.5012
22599 22599 22599 22599
