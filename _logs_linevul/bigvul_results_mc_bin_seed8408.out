[2023-11-14 15:42:57,077] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
Namespace(data_file='/hpcfs/users/a1232991/Data/CVESingle/CVEALL.csv', output_dir='./saved_models/ourBin/seed8408', model_type='roberta', block_size=512, model_name='model.bin', model_name_or_path='microsoft/codebert-base', config_name='', use_non_pretrained_model=False, tokenizer_name='microsoft/codebert-base', code_length=256, post_adjust=False, do_train=True, do_eval=False, do_test=True, debug=False, evaluate_during_training=True, do_local_explanation=False, reasoning_method=None, train_batch_size=16, eval_batch_size=16, gradient_accumulation_steps=1, learning_rate=2e-05, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, max_steps=-1, warmup_steps=0, seed=8408, epochs=10, language='Python,TypeScript,Java,CS,CCPP,JavaScript', resume=None, effort_at_top_k=0.2, top_k_recall_by_lines=0.01, top_k_recall_by_pred_prob=0.2, do_sorting_by_line_scores=False, do_sorting_by_pred_prob=False, logits_adjust=False, top_k_constant=10, num_attention_heads=12, write_raw_preds=False, use_word_level_tokenizer=False, use_non_pretrained_tokenizer=False, n_gpu=1, device=device(type='cuda'))
best_threshold for Python:  0.0928
best_f1 for Python:  0.8503
best_recall:  0.7553
best_precision:  0.9726
***** Python Test results *****
{'Python_accuracy': 0.9820193637621023, 'Python_ap': 0.8292190597366673, 'Python_recall': array([0.99852071, 0.74468085]), 'Python_precision': array([0.98253275, 0.97222222]), 'Python_f1': array([0.99046222, 0.84337349]), 'Python_threshold': 0.0928, 'Python_mcc': 0.842362977971408, 'Python_cm': array([[1350,    2],
       [  24,   70]])}
best_threshold for TypeScript:  0.0312
best_f1 for TypeScript:  0.3214
best_recall:  0.4091
best_precision:  0.2647
***** TypeScript Test results *****
{'TypeScript_accuracy': 0.9057377049180327, 'TypeScript_ap': 0.22502303711038146, 'TypeScript_recall': array([0.9954955, 0.       ]), 'TypeScript_precision': array([0.90946502, 0.        ]), 'TypeScript_f1': array([0.95053763, 0.        ]), 'TypeScript_threshold': 0.0312, 'TypeScript_mcc': -0.020194435437269283, 'TypeScript_cm': array([[221,   1],
       [ 22,   0]])}
best_threshold for Java:  0.1137
best_f1 for Java:  0.4
best_recall:  0.339
best_precision:  0.4878
***** Java Test results *****
{'Java_accuracy': 0.9294605809128631, 'Java_ap': 0.4214173777703336, 'Java_recall': array([0.99849398, 0.15254237]), 'Java_precision': array([0.92987377, 0.9       ]), 'Java_f1': array([0.96296296, 0.26086957]), 'Java_threshold': 0.1137, 'Java_mcc': 0.3540354566915076, 'Java_cm': array([[1326,    2],
       [ 100,   18]])}
best_threshold for CS:  0.7184
best_f1 for CS:  0.6933
best_recall:  0.5909
best_precision:  0.8387
***** CS Test results *****
{'CS_accuracy': 0.8613861386138614, 'CS_ap': 0.7273284153251744, 'CS_recall': array([0.93670886, 0.59090909]), 'CS_precision': array([0.89156627, 0.72222222]), 'CS_f1': array([0.91358025, 0.65      ]), 'CS_threshold': 0.7184, 'CS_mcc': 0.5690745332711106, 'CS_cm': array([[148,  10],
       [ 18,  26]])}
best_threshold for CCPP:  0.1017
best_f1 for CCPP:  0.3292
best_recall:  0.317
best_precision:  0.3424
***** CCPP Test results *****
{'CCPP_accuracy': 0.9526750308782422, 'CCPP_ap': 0.313008595797033, 'CCPP_recall': array([0.99801206, 0.12075472]), 'CCPP_precision': array([0.95418797, 0.768     ]), 'CCPP_f1': array([0.97560812, 0.20869565]), 'CCPP_threshold': 0.1017, 'CCPP_mcc': 0.2928684698177483, 'CCPP_cm': array([[14559,    29],
       [  699,    96]])}
best_threshold for JavaScript:  0.0885
best_f1 for JavaScript:  0.3785
best_recall:  0.4247
best_precision:  0.3414
***** JavaScript Test results *****
{'JavaScript_accuracy': 0.9149265274555298, 'JavaScript_ap': 0.3807501753099312, 'JavaScript_recall': array([0.99658509, 0.12876712]), 'JavaScript_precision': array([0.91675393, 0.79661017]), 'JavaScript_f1': array([0.95500409, 0.22169811]), 'JavaScript_threshold': 0.0885, 'JavaScript_mcc': 0.29903472552020516, 'JavaScript_cm': array([[3502,   12],
       [ 318,   47]])}
best_threshol:  0.0967
best_f1 for:  0.3787
best_recall:  0.3929
best_precision:  0.3655
***** Test results *****
  %s = %s test_accuracy 0.9453
  %s = %s test_ap 0.3965
  %s = %s test_cm [[21106    56]
 [ 1181   257]]
  %s = %s test_f1 0.2935
  %s = %s test_mcc 0.3678
  %s = %s test_precision 0.8211
  %s = %s test_recall 0.1787
  %s = %s test_threshold 0.0967
22600 22600 22600 22600
