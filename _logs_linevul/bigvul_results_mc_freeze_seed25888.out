[2023-11-15 07:47:43,714] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
language_dict:  {'Python': 1, 'TypeScript': 2, 'Java': 3, 'CS': 4, 'CCPP': 5, 'JavaScript': 6}
language_dict:  {'Python': 1, 'TypeScript': 2, 'Java': 3, 'CS': 4, 'CCPP': 5, 'JavaScript': 6}
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
(22599, 7) (22599,)
language_dict:  {'Python': 1, 'TypeScript': 2, 'Java': 3, 'CS': 4, 'CCPP': 5, 'JavaScript': 6}
best_threshold for Python:  0.0894
best_f1 for Python:  0.2131
best_recall:  0.3939
best_precision:  0.1461
***** Python Test results *****
{'Python_accuracy': 0.9511834319526628, 'Python_ap': 0.14185547008684563, 'Python_recall': array([1., 0.]), 'Python_precision': array([0.95118343, 0.        ]), 'Python_f1': array([0.97498105, 0.        ]), 'Python_threshold': 0.0894, 'Python_mcc': 0.0, 'Python_cm': array([[1286,    0],
       [  66,    0]])}
best_threshold for TypeScript:  0.05
best_f1 for TypeScript:  0.3689
best_recall:  0.76
best_precision:  0.2436
***** TypeScript Test results *****
{'TypeScript_accuracy': 0.8966942148760331, 'TypeScript_ap': 0.25598854610529764, 'TypeScript_recall': array([1., 0.]), 'TypeScript_precision': array([0.89669421, 0.        ]), 'TypeScript_f1': array([0.94553377, 0.        ]), 'TypeScript_threshold': 0.05, 'TypeScript_mcc': 0.0, 'TypeScript_cm': array([[217,   0],
       [ 25,   0]])}
best_threshold for Java:  0.0734
best_f1 for Java:  0.2451
best_recall:  0.2818
best_precision:  0.2168
***** Java Test results *****
{'Java_accuracy': 0.9235580264072273, 'Java_ap': 0.1673458785460476, 'Java_recall': array([1., 0.]), 'Java_precision': array([0.92355803, 0.        ]), 'Java_f1': array([0.96026012, 0.        ]), 'Java_threshold': 0.0734, 'Java_mcc': 0.0, 'Java_cm': array([[1329,    0],
       [ 110,    0]])}
best_threshold for CS:  0.0248
best_f1 for CS:  0.419
best_recall:  0.88
best_precision:  0.275
***** CS Test results *****
{'CS_accuracy': 0.7619047619047619, 'CS_ap': 0.3913499012484127, 'CS_recall': array([1., 0.]), 'CS_precision': array([0.76190476, 0.        ]), 'CS_f1': array([0.86486486, 0.        ]), 'CS_threshold': 0.0248, 'CS_mcc': 0.0, 'CS_cm': array([[160,   0],
       [ 50,   0]])}
best_threshold for CCPP:  0.0575
best_f1 for CCPP:  0.2026
best_recall:  0.5583
best_precision:  0.1237
***** CCPP Test results *****
{'CCPP_accuracy': 0.9497886178861789, 'CCPP_ap': 0.1314218293259623, 'CCPP_recall': array([1., 0.]), 'CCPP_precision': array([0.94978862, 0.        ]), 'CCPP_f1': array([0.97424778, 0.        ]), 'CCPP_threshold': 0.0575, 'CCPP_mcc': 0.0, 'CCPP_cm': array([[14603,     0],
       [  772,     0]])}
best_threshold for JavaScript:  0.1142
best_f1 for JavaScript:  0.2602
best_recall:  0.4564
best_precision:  0.182
***** JavaScript Test results *****
{'JavaScript_accuracy': 0.9020592667001507, 'JavaScript_ap': 0.19648080737246476, 'JavaScript_recall': array([1., 0.]), 'JavaScript_precision': array([0.90205927, 0.        ]), 'JavaScript_f1': array([0.94850805, 0.        ]), 'JavaScript_threshold': 0.1142, 'JavaScript_mcc': 0.0, 'JavaScript_cm': array([[3592,    0],
       [ 390,    0]])}
+------------+----------------------+-----+-----------+--------+
|  Language  |          AP          |  F1 | Precision | Recall |
+------------+----------------------+-----+-----------+--------+
|   Python   | 0.14892935236725535  | 0.0 |    0.0    |  0.0   |
| TypeScript | 0.010615644415380047 | 0.0 |    0.0    |  0.0   |
|    Java    | 0.09083877070466564  | 0.0 |    0.0    |  0.0   |
|     CS     | 0.013396437722661976 | 0.0 |    0.0    |  0.0   |
|    CCPP    | 0.12720329508852274  | 0.0 |    0.0    |  0.0   |
| JavaScript | 0.18190952327095217  | 0.0 |    0.0    |  0.0   |
+------------+----------------------+-----+-----------+--------+
22600 22600 22600 22600
